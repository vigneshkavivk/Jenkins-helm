pipeline {
    agent any

    environment {
        VENV_PATH = 'venv-checkov'
        CHECKOV_OUTPUT = 'checkov_output.txt'
        REPO_URL = 'https://github.com/vigneshkavivk/ghost-blog.git'
        REPO_BRANCH = 'main'
        CUSTOM_POLICIES_DIR = 'custom_policies'  // Store the path to the custom policies directory
    }

    stages {
        stage('Clone Helm Repo') {
            steps {
                git branch: "${REPO_BRANCH}",
                    url: "${REPO_URL}"
            }
        }

        stage('Set Up Virtual Environment and Install Checkov') {
            steps {
                sh '''
                    apt install python3.11-venv -y
                    python3 -m venv ${VENV_PATH}
                    . ${VENV_PATH}/bin/activate
                    ${VENV_PATH}/bin/pip install --upgrade pip
                    ${VENV_PATH}/bin/pip install checkov
                    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
                '''
            }
        }

        stage('Render Helm Charts') {
            steps {
                sh '''
                    echo "üßπ Cleaning previous rendered files..."
                    rm -rf rendered/
                    mkdir -p rendered
                    
                    echo "üîß Rendering Helm charts into split files..."
                    find . -name "Chart.yaml" | while read chart_file; do
                        chart_dir=$(dirname "$chart_file")
                        chart_name=$(basename "$chart_dir" | tr '[:upper:]' '[:lower:]' | tr -cd 'a-z0-9-')
                        mkdir -p rendered/${chart_name}
                        helm template ${chart_name} ${chart_dir} --output-dir rendered/${chart_name}
                    done
                '''
            }
        }

        stage('Run Checkov with Custom Policies Only') {
            steps {
                script {
                    def checkovExitCode = sh(
                        script: '''
                            . ${VENV_PATH}/bin/activate
                            echo "üëâ Running Checkov with custom policies only..." > ${CHECKOV_OUTPUT}
                            ${VENV_PATH}/bin/checkov -d rendered/ --framework kubernetes \
                                --external-checks-dir ${CUSTOM_POLICIES_DIR} --check MASA_K8S_001,MASA_K8S_002,MASA_K8S_003,MASA_K8S_004,MASA_K8S_005,MASA_K8S_006,MASA_K8S_007,MASA_K8S_008,MASA_K8S_009,MASA_K8S_010,MASA_K8S_011,MASA_K8S_012,MASA_K8S_013,MASA_K8S_014,MASA_K8S_015,CKV_CUSTOM_001 \
                                | tee -a ${CHECKOV_OUTPUT}
                        ''',
                        returnStatus: true
                    )
        
                    sh "cat ${CHECKOV_OUTPUT}"
        
                    if (checkovExitCode != 0) {
                        error "‚ùåCheckov found violations in custom policies! Check ${CHECKOV_OUTPUT} for details."
                    } else {
                        echo "‚úÖCheckov custom policy scan passed."
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${CHECKOV_OUTPUT}", allowEmptyArchive: true
        }
    }
}
