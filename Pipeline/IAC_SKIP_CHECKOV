pipeline {
    agent any

    environment {
        VENV_PATH = 'venv-checkov'
        CHECKOV_OUTPUT = 'checkov_output.txt'
        REPO_URL = 'https://github.com/Abinesh0206/Checkov-Passed.git' 
        REPO_BRANCH = 'submain'
    }

    stages {
        stage('Clone Terraform Repo') {
            steps {
                git branch: "${REPO_BRANCH}",
                    url: "${REPO_URL}"
            }
        }

        stage('Set Up Virtual Environment and Install Checkov') {
            steps {
                sh '''
                    apt install python3.11-venv -y
                    python3 -m venv ${VENV_PATH}
                    . ${VENV_PATH}/bin/activate
                    ${VENV_PATH}/bin/pip install --upgrade pip
                    ${VENV_PATH}/bin/pip install checkov
                '''
            }
        }

        stage('Run Checkov on Terraform Code') {
            steps {
                script {
                    def checkovExitCode = sh(
                        script: '''
                            . ${VENV_PATH}/bin/activate
                            echo "Running Checkov on Terraform code..." > ${CHECKOV_OUTPUT}
                            ${VENV_PATH}/bin/checkov -d rendered/ --framework kubernetes \
                                --external-checks-dir ${CUSTOM_POLICIES_DIR} --check MASA_K8S_001,MASA_K8S_002,MASA_TF_003,MASA_K8S_004,MASA_K8S_005,MASA_K8S_006,MASA_K8S_007,MASA_K8S_008,MASA_K8S_009,MASA_K8S_010,MASA_K8S_011,MASA_K8S_012,MASA_K8S_013,MASA_K8S_014,MASA_K8S_015,CKV_CUSTOM_001 \
                                | tee -a ${CHECKOV_OUTPUT}
                        ''',
                        returnStatus: true
                    )

                    sh "cat ${CHECKOV_OUTPUT}"

                    if (checkovExitCode != 0) {
                        error "❌heckov found policy violations! Check ${CHECKOV_OUTPUT} for details."
                    } else {
                        echo "✅heckov passed with no violations."
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${CHECKOV_OUTPUT}", allowEmptyArchive: true
        }
    }
}
