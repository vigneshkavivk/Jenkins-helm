pipeline {
    agent any

    environment {
        VENV_PATH = 'venv-checkov'
        CHECKOV_OUTPUT = 'checkov_output.txt'
        REPO_URL = 'https://github.com/CloudMasa-Tech/terraformmodules.git'
        REPO_BRANCH = 'checktf'
    }

    stages {
        stage('Clone Terraform Repo') {
            steps {
                git branch: "${REPO_BRANCH}",
                    url: "${REPO_URL}", credentialsId: 'github-creds'
            }
        }

        stage('Set Up Virtual Environment and Install Checkov') {
            steps {
                sh '''
                    apt update && apt install -y python3.11-venv
                    python3 -m venv ${VENV_PATH}
                    . ${VENV_PATH}/bin/activate
                    ${VENV_PATH}/bin/pip install --upgrade pip
                    ${VENV_PATH}/bin/pip install checkov
                '''
            }
        }

        stage('Run Checkov on Terraform Code') {
            steps {
                script {
                    def checkovExitCode = sh(
                        script: '''
                            . ${VENV_PATH}/bin/activate
                            echo "Running Checkov on Terraform code..." > ${CHECKOV_OUTPUT}
                            ${VENV_PATH}/bin/checkov -d . --framework terraform \
                             --quiet \
                                | tee -a ${CHECKOV_OUTPUT}
                        ''',
                        returnStatus: true
                    )

                    sh "cat ${CHECKOV_OUTPUT}"

                    if (checkovExitCode != 0) {
                        error "❌ Checkov found Terraform policy violations! Check ${CHECKOV_OUTPUT} for details."
                    } else {
                        echo "✅ Checkov passed with no violations."
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${CHECKOV_OUTPUT}", allowEmptyArchive: true
        }
    }
}
